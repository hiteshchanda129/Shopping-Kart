

action creater => action => dispatch => reducer => store

//actiontype
 
export const ActionType  ={
    SET_PRODUCTS : 'SET_PRODUCTS',
    SELECETED_PRODUCT : 'SELECETED_PRODUCT',
    REMOVE_SELECTED_PRODUCT :"REMOVE_SELECTED_PRODUCT"
}


//product action

import { ActionType } from "../contants/action-type";

export const setProduct = (products) =>{
    return {
        type : ActionType.SET_PRODUCTS,
        payload : products
    }
}

export const selectedProduct =(product)=>{
    return {
        type : ActionType.SELECETED_PRODUCT,
        payload : product
    }
}

//product reducer

import { ActionType } from "../contants/action-type"


const initialstate ={
    product :[{
        id : 1,
        name :'hitesh',
        domain : 'programmer'
    }]
}

export const productReducer =(state =initialstate, {type , payload})=>{
    switch (type){
        case ActionType.SET_PRODUCTS:
            return state;
        default:
            return state    
    }
}


//combine reducer

import { combineReducers } from "redux";
import { productReducer } from "./ProductReducer";

const reducers = combineReducers({
    allProduct : productReducer,
})

export default reducers


//create store

import { createStore } from "redux";
import reducers  from "./reducers/index";

const store = createStore(reducers , {},  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())

export default store


//pass store through provider

 <Provider store ={store}>
    <App />
    </Provider>